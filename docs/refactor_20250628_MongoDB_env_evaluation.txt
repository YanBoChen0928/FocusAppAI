refactor: Add environment-based MongoDB connection failure handling

Implement differentiated server startup behavior based on environment 
configuration to improve production stability while maintaining development 
flexibility.

## Background
Previously, server would always attempt to start even when MongoDB connection 
failed, which could lead to unstable service in production environments with 
non-functional API endpoints returning 500 errors.

## Changes Made
- Modified `focus-app/server/server.js` (lines 188-195)
- Added environment-based conditional logic for MongoDB connection failure handling
- Introduced `NODE_ENV` and `ALLOW_SERVER_START_WITHOUT_DB` environment variable checks

## Implementation Details
### Development Environment Behavior:
- When `NODE_ENV === "development"` OR `ALLOW_SERVER_START_WITHOUT_DB === "true"`
- Server starts without MongoDB connection (preserves existing debugging capability)
- Maintains development environment flexibility

### Production Environment Behavior:
- When running in production environment
- Server logs clear error messages explaining the failure
- Process exits with code 1 to trigger container restart and monitoring alerts
- Prevents unstable service with non-functional database operations

## Technical Benefits
1. **Production Stability**: Eliminates scenarios where server runs without database
2. **Fast Failure Principle**: Production failures are immediately visible and actionable
3. **Container Compatibility**: Proper exit codes trigger orchestration system restarts
4. **Development Flexibility**: No impact on local development and debugging workflows
5. **Monitoring Integration**: Process exits trigger proper alerting systems

## Impact Assessment
- **Development**: Zero impact, maintains existing behavior
- **Production**: Improved reliability, prevents silent failures
- **Deployment**: Better integration with container orchestration systems
- **Debugging**: Clear error messages for production MongoDB issues

## Files Modified
- focus-app/server/server.js (lines 188-195)

## Environment Variables
- `NODE_ENV`: Standard Node.js environment indicator
- `ALLOW_SERVER_START_WITHOUT_DB`: Optional override flag for special cases

This refactor follows containerization best practices and implements proper 
environment-aware error handling without affecting existing functionality. 